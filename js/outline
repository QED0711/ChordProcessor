===CONVERTING STRUCTURE CODES TO INTERVAL SCHEMES===

1. user defines an interval scheme and chord length
    - this is defined in the IntervalScheme Class 
2. JSON file with corresponding interval structure is fetched and converted to a simple array of structures;
3. Each individual interval structure is passed through the IntervalScheme Class 
    - The user defined intervals are mapped to each chord structure. 
    - A new Array with mapped interval structures is returned. 

===CONVERTING INTERVAL SCHEMES TO PITCHES===
4. IntervalMap 
4. Each mapped interval structure is filtered through a series of user deffined filters
    - This is defined in the ChordFilter Class. 
    - Filter Types:
        - ChordFilter.contains(...pitches))
        - ChordFilter.notContains(...pitches)
        - chordFilter.checkTranspositions(boolean)
        - ChordFilter.vector(VectorObj)
            - VectorObj Example: 
            {
                '1' : {
                    'greaterThan' : false,
                    'lessThan' : false,
                    'equalTo' : true,
                    'value' : 2
                },
                '2' : {
                    'greaterThan' : true,
                    'lessThan' : false,
                    'equalTo' : false,
                    'value' : 1
                }
            }
5. Produce statistics of the currently displayed chord
    - this is defined in the ChordStats Class.
    - Statistics:
        - ChordStats.vector()
        - ChordStats.structureTypes()